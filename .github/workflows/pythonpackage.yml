name: Test PyGeoprocessing

on: [push, pull_request]

jobs:
  Test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.7, 3.8, 3.9]
        gdal: ["3.2.2", "3.3.0", "3.4.0"]
        os: [ubuntu-latest, windows-latest, macos-latest]

        include:
          - python-version: "3.10"
            gdal: "3.4.0"
            os: ubuntu-latest

          - python-version: "3.10"
            gdal: "3.4.0"
            os: windows-latest

          - python-version: "3.10"
            gdal: "3.4.0"
            os: macos-latest

    steps:
      - uses: actions/checkout@v2
        with:
          # Fetch all history so that setuptool_scm can build the correct
          # version string.
          fetch-depth: 0

      - name: setup-miniconda
        uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: pyenv
          auto-update-conda: false
          python-version: ${{ matrix.python-version }}
          channels: conda-forge, anaconda

      - name: Install dependencies
        shell: bash -l {0}
        run: |
          conda upgrade -y pip setuptools
          conda install -y flake8

      - name: Lint with flake8
        shell: bash -l {0}
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127
          # chars wide
          flake8 . --count --exit-zero --max-complexity=10 \
            --max-line-length=127 --statistics

      - name: Install PyGeoprocessing
        shell: bash -l {0}
        run: |
            conda install -c conda-forge --file requirements.txt
            conda install -c conda-forge gdal==${{ matrix.gdal }} pytest setuptools build
            python -m build --wheel
            python -m pip install pygeoprocessing --find-links=dist

      - name: Test with pytest
        shell: bash -l {0}
        run: pytest
